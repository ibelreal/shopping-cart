{"version":3,"sources":["images/close.png","components/Product.js","components/ProductsList.js","components/Summary.js","components/MainPage.js","components/ProductDetail.js","components/App.js","index.js"],"names":["module","exports","Product","props","product","productName","productCode","productPrice","totalPrice","productValue","imageSrc","imageAlt","className","src","alt","to","replace","id","onClick","ev","preventDefault","substractProduct","target","parentNode","type","value","readOnly","addProduct","ProductsList","products","map","index","key","Summary","items","price","discountMug","discountShirt","totalCost","alert","MainPage","state","apiData","bind","item","this","find","setState","handleUpdate","i","length","newTotal","nTotal","n","reduce","acc","number","totalMugs","parseInt","totalShirt","updatePriceCart","updateItems","updatePriceOrder","updateDiscountMug","updateDiscountShirt","updateTotalCost","React","Component","ProductDetail","imageDetailSrc","close","handleClick","App","renderProductDetail","code","selectProduct","routeId","match","params","selectedProduct","Fragment","exact","path","render","ReactDOM","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,mC,ouBC8D5BC,MA1Df,SAAiBC,GAAO,MAG6EA,EAAMC,QAA/FC,EAHY,EAGZA,YAAaC,EAHD,EAGCA,YAAaC,EAHd,EAGcA,aAAcC,EAH5B,EAG4BA,WAAYC,EAHxC,EAGwCA,aAAcC,EAHtD,EAGsDA,SAAUC,EAHhE,EAGgEA,SAYpF,OACI,wBAAIC,UAAU,eACV,yBAAKA,UAAU,eACX,4BAAQA,UAAU,iBACd,yBAAKC,IAAG,UAAKH,GAAYI,IAAKH,IAC9B,yBAAKC,UAAU,uBACX,kBAAC,IAAD,CAAMG,GAAE,WAAMT,EAAN,KAAsBU,SAAO,GACjC,4BAAKX,IAET,uBAAGO,UAAU,gBAAb,gBAA0CN,MAItD,yBAAKM,UAAU,eAAeK,GAAIX,GAC9B,4BAAQM,UAAU,QAAQM,QAxBtC,SAA0BC,GACtBA,EAAGC,iBACHjB,EAAMkB,iBAAiBF,EAAGG,OAAOC,WAAWN,MAsBpC,KACA,2BAAOO,KAAK,OAAOZ,UAAU,mBAAmBa,MAAOhB,EAAciB,UAAQ,IAC7E,4BAAQd,UAAU,QAAQM,QArBtC,SAAoBC,GAChBA,EAAGC,iBACHjB,EAAMwB,WAAWR,EAAGG,OAAOC,WAAWN,MAmB9B,MAEJ,yBAAKL,UAAU,aACX,0BAAMA,UAAU,iBAAiBL,GAEjC,0BAAMK,UAAU,6BAAhB,WAEJ,yBAAKA,UAAU,aACX,0BAAMA,UAAU,iBAAiBJ,GACjC,0BAAMI,UAAU,6BAAhB,aCfDgB,MAzBf,SAAsBzB,GAElB,OACI,6BAASS,UAAU,YACf,wBAAIA,UAAU,QAAd,iBACA,wBAAIA,UAAU,iBACTT,EAAM0B,SAASC,KAAI,SAAC1B,EAAS2B,GAC1B,OAAO,kBAAC,EAAD,CACHC,IAAKD,EACL3B,QAASA,EACTuB,WAAYxB,EAAMwB,WAClBN,iBAAkBlB,EAAMkB,yBCkCjCY,MA9Cf,SAAiB9B,GAOb,OACI,2BAAOS,UAAU,WACb,wBAAIA,UAAU,QAAd,iBACA,wBAAIA,UAAU,gCACV,4BACI,0BAAMA,UAAU,wBAAwBT,EAAM+B,MAA9C,UACA,0BAAMtB,UAAU,uBAAuBT,EAAMgC,MAAM,0BAAMvB,UAAU,YAAhB,aAG3D,yBAAKA,UAAU,yCACX,yCACA,4BACI,4BAAI,+CAA0B,kCAAQT,EAAMiC,YAAd,WAC9B,4BAAI,gDAA2B,kCAAQjC,EAAMkC,cAAd,WAC/B,4BAAI,4CAAuB,4CAGnC,yBAAKzB,UAAU,yBACX,4BACI,4BACI,0BAAMA,UAAU,sBAAhB,cACA,0BAAMA,UAAU,uBAAuBT,EAAMmC,aAGrD,4BAAQ1B,UAAU,iBAAiBY,KAAK,SAASN,QA7B7D,SAA4BC,GACxBA,EAAGC,iBACHmB,MAAM,+BA2BE,eC2GDC,E,YAxIX,WAAYrC,GAAQ,IAAD,8BACf,4CAAMA,KACDsC,MAAQ,CACTZ,SAAU1B,EAAMuC,QAChBR,MAAO,EACPC,MAAO,EACPC,YAAa,EACbC,cAAe,EACfC,UAAW,GAEf,EAAKjB,iBAAmB,EAAKA,iBAAiBsB,KAAtB,gBACxB,EAAKhB,WAAa,EAAKA,WAAWgB,KAAhB,gBAXH,E,8EAkBF1B,GACb,IAAM2B,EAAOC,KAAKJ,MAAMZ,SAASiB,MAAK,SAAAF,GAAI,OAAIA,EAAKtC,cAAgBW,KAC/D2B,EAAKnC,aAAe,GACpBoC,KAAKE,SAAS,CAAEtC,aAAcmC,EAAKnC,iBAEvCoC,KAAKG,iB,iCAOE/B,GACP,IAAM2B,EAAOC,KAAKJ,MAAMZ,SAASiB,MAAK,SAAAF,GAAI,OAAIA,EAAKtC,cAAgBW,KACnE4B,KAAKE,SAAS,CAAEtC,aAAcmC,EAAKnC,iBACnCoC,KAAKG,iB,sCAMOJ,GACZ,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,IAAK,CAClC,IAAIE,EAAWP,EAAKK,GAAGxC,aAAemC,EAAKK,GAAG1C,aAC9CsC,KAAKE,SAAS,CAAEvC,WAAYoC,EAAKK,GAAGzC,WAAa2C,O,kCAO7CP,GACR,IAAMQ,EAASR,EAAKd,KAAI,SAAAuB,GAAC,OAAIA,EAAE5C,gBAAc6C,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAMC,IAAQ,GACnFX,KAAKE,SAAS,CAAEb,MAAOkB,M,uCAMVR,GACb,IAAMQ,EAASR,EAAKd,KAAI,SAAAuB,GAAC,OAAIA,EAAE7C,cAAY8C,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAMC,IAAQ,GAEjF,OADAX,KAAKE,SAAS,CAAEZ,MAAOiB,IAChBA,I,wCAQOR,GACd,IAAMa,EAAYb,EAAKE,MAAK,SAAAF,GAAI,MAAyB,QAArBA,EAAKvC,eACzC,GAAIoD,EAAUhD,aAAe,EAAG,CAC5B,IAAI2B,EAAcsB,SAASD,EAAUhD,aAAe,GAEpD,OADAoC,KAAKE,SAAS,CAAEX,YAA2B,EAAdA,IACR,EAAdA,EAIP,OADAS,KAAKE,SAAS,CAAEX,YAAa,IACtB,I,0CASKQ,GAChB,IAAMe,EAAaf,EAAKE,MAAK,SAAAF,GAAI,MAAyB,UAArBA,EAAKvC,eAC1C,GAAIsD,EAAWlD,aAAe,EAAG,CAC7B,IAAI4B,EAAwC,IAAxBsB,EAAWnD,WAE/B,OADAqC,KAAKE,SAAS,CAAEV,cAAeA,IACxBA,EAIP,OADAQ,KAAKE,SAAS,CAAEV,cAAe,IACxB,I,sCAMCF,EAAOC,EAAaC,GAChC,IAAIC,EAAYH,EAAQC,EAAcC,EACtCQ,KAAKE,SAAS,CAAET,gB,qCAOhB,IAAIM,EAAOC,KAAKJ,MAAMZ,SACtBgB,KAAKe,gBAAgBhB,GACrBC,KAAKgB,YAAYjB,GACjB,IAAMT,EAAQU,KAAKiB,iBAAiBlB,GAC9BR,EAAcS,KAAKkB,kBAAkBnB,GACrCP,EAAgBQ,KAAKmB,oBAAoBpB,GAC/CC,KAAKoB,gBAAgB9B,EAAOC,EAAaC,K,+BAIzC,OACI,0BAAMzB,UAAU,OACZ,kBAAC,EAAD,CAAciB,SAAUgB,KAAKJ,MAAMZ,SAC/BF,WAAYkB,KAAKlB,WACjBN,iBAAkBwB,KAAKxB,mBAE3B,kBAAC,EAAD,CAASa,MAAOW,KAAKJ,MAAMP,MACvBC,MAAOU,KAAKJ,MAAMN,MAClBC,YAAaS,KAAKJ,MAAML,YACxBC,cAAeQ,KAAKJ,MAAMJ,cAC1BC,UAAWO,KAAKJ,MAAMH,iB,GAnInB4B,IAAMC,W,iBCuDdC,MAtDf,SAAuBjE,GAAO,MAGmDA,EAAMC,QAA3EC,EAHkB,EAGlBA,YAAaC,EAHK,EAGLA,YAAaC,EAHR,EAGQA,aAAc8D,EAHtB,EAGsBA,eAAgB1D,EAHtC,EAGsCA,SAOhE,OACI,0BAAMC,UAAU,OACZ,6BAASA,UAAU,iBACf,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QAAQC,IAAG,UAAKwD,GAAkBvD,IAAKH,MAG9D,2BAAOC,UAAU,kBACb,kBAAC,IAAD,CAAMG,GAAI,IAAKC,SAAO,GAClB,yBAAKJ,UAAU,YAAYC,IAAKyD,IAAOxD,IAAI,gBAE/C,wBAAIF,UAAU,YAAYP,EAA1B,IAAuC,8BAAOE,EAAP,WACvC,yBAAKK,UAAU,yCACX,4BACI,4BAAI,0BAAMA,UAAU,eAAhB,qRASZ,uBAAGA,UAAU,gBAAb,iBAA2CN,GAC3C,yBAAKM,UAAU,gCAEX,4BAAQY,KAAK,SAASN,QA/BtC,SAAqBC,GACjBA,EAAGC,iBACHjB,EAAMoE,YAAYjE,KA6BN,mB,eCiBLkE,G,kBAhDb,WAAYrE,GAAQ,IAAD,8BACjB,4CAAMA,KACDsC,MAAQ,CACXZ,SAAUa,GAEZ,EAAK+B,oBAAsB,EAAKA,oBAAoB9B,KAAzB,gBAC3B,EAAK4B,YAAc,EAAKA,YAAY5B,KAAjB,gBANF,E,yEASP+B,GACV,IAAMC,EAAgB9B,KAAKJ,MAAMZ,SAASiB,MAAK,SAAA1C,GAAO,OAAIA,EAAQE,cAAgBoE,KAClF7B,KAAKE,SAAS,CAAEtC,aAAckE,EAAclE,iBAC5C8B,MAAM,0B,0CAGYpC,GAClB,IAAMyE,EAAUzE,EAAM0E,MAAMC,OAAO1E,QAC7B2E,EAAkBlC,KAAKJ,MAAMZ,SAASiB,MAAK,SAAA1C,GAAO,OAAIA,EAAQE,cAAgBsE,KACpF,MAAoC,YAAhCG,EAAgBzE,YAEhB,kBAAE,EAAF,CAAgBF,QAAS2E,EAAiBR,YAAa1B,KAAK0B,cAI5D,0BAAM3D,UAAU,OACd,wBAAIA,UAAU,aAAd,oCAGA,kBAAC,IAAD,CAAMG,GAAI,IAAKC,SAAO,GACpB,yBAAKJ,UAAU,YAAYC,IAAKyD,IAAOxD,IAAI,mB,+BAMnD,OACE,kBAAC,IAAMkE,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAUxC,QAASG,KAAKJ,MAAMZ,YAEhC,kBAAC,IAAD,CAAOqD,KAAK,YAAYC,OAAQtC,KAAK4B,4B,GA1C7BP,IAAMC,YCJxBiB,IAASD,OAAO,kBAAC,IAAD,KACZ,kBAAC,EAAD,OACWE,SAASC,eAAe,W","file":"static/js/main.ea71fe48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.4d585d83.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Product(props) {\n\n    //Destructuring props\n    const { productName, productCode, productPrice, totalPrice, productValue, imageSrc, imageAlt } = props.product;\n\n    function substractProduct(ev) {\n        ev.preventDefault();\n        props.substractProduct(ev.target.parentNode.id);\n    }\n\n    function addProduct(ev) {\n        ev.preventDefault();\n        props.addProduct(ev.target.parentNode.id);\n    }\n\n    return (\n        <li className=\"product row\">\n            <div className=\"col-product\">\n                <figure className=\"product-image\">\n                    <img src={`${imageSrc}`} alt={imageAlt} />\n                    <div className=\"product-description\">\n                        <Link to={`/${productCode}/`} replace>\n                            <h1>{productName}</h1>\n                        </Link>\n                        <p className=\"product-code\">Product code {productCode}</p>\n                    </div>\n                </figure>\n            </div>\n            <div className=\"col-quantity\" id={productCode}>\n                <button className=\"count\" onClick={substractProduct}>-</button>\n                <input type=\"text\" className=\"product-quantity\" value={productValue} readOnly />\n                <button className=\"count\" onClick={addProduct}>+</button>\n            </div>\n            <div className=\"col-price\">\n                <span className=\"product-price\">{productPrice}</span>\n\n                <span className=\"product-currency currency\">€</span>\n            </div>\n            <div className=\"col-total\">\n                <span className=\"product-price\">{totalPrice}</span>\n                <span className=\"product-currency currency\">€</span>\n            </div>\n        </li>\n    );\n}\n\nProduct.propTypes = {\n    productName: PropTypes.string,\n    productCode: PropTypes.string,\n    productPrice: PropTypes.number,\n    productValue: PropTypes.number,\n    totalPrice: PropTypes.number,\n    imageSrc: PropTypes.string,\n    imageAlt: PropTypes.string,\n    substractProduct: PropTypes.func,\n    addProduct: PropTypes.func\n};\n\nexport default Product;","import React from \"react\";\nimport Product from \"./Product\";\nimport PropTypes from \"prop-types\";\n\nfunction ProductsList(props) {\n\n    return (\n        <section className=\"products\">\n            <h1 className=\"main\">Shopping cart</h1>\n            <ul className=\"products-list\">\n                {props.products.map((product, index) => {\n                    return <Product\n                        key={index}\n                        product={product}\n                        addProduct={props.addProduct}\n                        substractProduct={props.substractProduct}\n                    />\n                })}\n            </ul>\n        </section>\n    )\n}\n\nProductsList.propTypes = {\n    products: PropTypes.array.isRequired,\n    addProduct: PropTypes.func.isRequired,\n    substractProduct: PropTypes.func.isRequired\n};\n\nexport default ProductsList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Summary(props) {\n\n    function handleClickSummary(ev) {\n        ev.preventDefault();\n        alert(\"Thank you for your order!\")\n    }\n\n    return (\n        <aside className=\"summary\">\n            <h1 className=\"main\">Order Summary</h1>\n            <ul className=\"summary-items wrapper border\">\n                <li>\n                    <span className=\"summary-items-number\">{props.items} Items</span>\n                    <span className=\"summary-items-price\">{props.price}<span className=\"currency\">€</span></span>\n                </li>\n            </ul>\n            <div className=\"summary-discounts wrapper-half border\">\n                <h2>Discounts</h2>\n                <ul>\n                    <li><span>2x1 Mug offer</span><span>-{props.discountMug}€</span></li>\n                    <li><span>x3 Shirt offer</span><span>-{props.discountShirt}€</span></li>\n                    <li><span>Promo code</span><span>0€</span></li>\n                </ul>\n            </div>\n            <div className=\"summary-total wrapper\">\n                <ul>\n                    <li>\n                        <span className=\"summary-total-cost\">Total cost</span>\n                        <span className=\"summary-total-price\">{props.totalCost}</span>\n                    </li>\n                </ul>\n                <button className=\"summary-button\" type=\"submit\" onClick={handleClickSummary}>Checkout</button>\n            </div>\n        </aside>\n    )\n}\n\nSummary.propTypes = {\n    items: PropTypes.number,\n    price: PropTypes.number,\n    discountMug: PropTypes.number,\n    discountShirt: PropTypes.number,\n    totalCost: PropTypes.number,\n    handleClick: PropTypes.func\n};\n\nexport default Summary;","import React from \"react\";\nimport ProductsList from \"./ProductsList\";\nimport Summary from \"./Summary\";\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: props.apiData,\n            items: 0,\n            price: 0,\n            discountMug: 0,\n            discountShirt: 0,\n            totalCost: 0\n        }\n        this.substractProduct = this.substractProduct.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n    }\n\n    //Function that substracts one product in Cart\n    //this function recives an id of the product clicked as a parameter, find the element in products array\n    //that matches the id, if its productValue its higher than 0 it removes one value and update productValue.\n    //After that it calls the handleUpdate function\n    substractProduct(id) {\n        const item = this.state.products.find(item => item.productCode === id);\n        if (item.productValue > 0) {\n            this.setState({ productValue: item.productValue-- });\n        }\n        this.handleUpdate();\n    }\n\n    //Function that adds one product in Cart\n    //this function recives an id of the product clicked as a parameter, find the element in products array\n    //that matches the id, adds one value in productValue and updates it.\n    //After that it calls the handleUpdate function\n    addProduct(id) {\n        const item = this.state.products.find(item => item.productCode === id);\n        this.setState({ productValue: item.productValue++ });\n        this.handleUpdate();\n    }\n\n    //Function that update the total price of the product in Cart\n    //this function recives item as parameter. Makes a loop to update newTotal variable in all elements\n    //multiplying productValue with productPrice and updates totalPrice with newTotal\n    updatePriceCart(item) {\n        for (let i = 0; i < item.length; i++) {\n            let newTotal = item[i].productValue * item[i].productPrice;\n            this.setState({ totalPrice: item[i].totalPrice = newTotal });\n        }\n    }\n\n    //Function that update the items in Summary\n    //this function recives item as parameter. Declares nTotal as a sum of all productValue properties\n    //and updates items with nTotal\n    updateItems(item) {\n        const nTotal = item.map(n => n.productValue).reduce((acc, number) => acc + number, 0);\n        this.setState({ items: nTotal });\n    }\n\n    //Function that update the total price of the products in Summary\n    //this function recives item as parameter. Declares nTotal as a sum of all totalPrice properties,\n    //updates price with nTotal and return nTotal\n    updatePriceOrder(item) {\n        const nTotal = item.map(n => n.totalPrice).reduce((acc, number) => acc + number, 0);\n        this.setState({ price: nTotal });\n        return nTotal;\n    }\n\n    //Function that update the total discount of Mug product\n    //this function recives item as parameter. Declares totalMugs as the element with Mug as productName.\n    //If its productValue its higher than 0 declares discountMug as the result of productvalue divided by 2. It uses parseInt\n    //to get only integer numbers (1,2,3,etc.). Updates discountMug with its value multiply by its price and return it.\n    //If its productValue its lower than 0. Updates discountMug with 0 and return 0.\n    updateDiscountMug(item) {\n        const totalMugs = item.find(item => item.productName === 'Mug');\n        if (totalMugs.productValue > 0) {\n            let discountMug = parseInt(totalMugs.productValue / 2);\n            this.setState({ discountMug: discountMug * 5 });\n            return discountMug * 5;\n        }\n        else {\n            this.setState({ discountMug: 0 });\n            return 0;\n        }\n    }\n\n    //Function that update the total discount of Shirt product\n    //this function recives item as parameter. Declares totalShirt as the element with Shirt as productName.\n    //If its productValue its higher than 2 declares discountShirt as the result of totalPrice multiply by 0.05\n    //Updates discountShirt and return it.\n    //If its productValue its 2 or lower. Updates discountShirt with 0 and return 0.\n    updateDiscountShirt(item) {\n        const totalShirt = item.find(item => item.productName === 'Shirt');\n        if (totalShirt.productValue > 2) {\n            let discountShirt = totalShirt.totalPrice * 0.05\n            this.setState({ discountShirt: discountShirt });\n            return discountShirt;\n        }\n        else {\n            this.setState({ discountShirt: 0 });\n            return 0;\n        }\n    }\n\n    //Function that update the total Cost in Summary\n    //this function recives price,discountMug and discountShirt as parameters to update the totalCost\n    updateTotalCost(price, discountMug, discountShirt) {\n        let totalCost = price - discountMug - discountShirt;\n        this.setState({ totalCost });\n    }\n\n    //Function that handle the update of products after add or substract a product in the Cart\n    //this function will call another functions to update Cart and Summary.\n    //This function declares 3 parameters (price,discountMug,discountShirt) for updateTotalCost function.\n    handleUpdate() {\n        let item = this.state.products;\n        this.updatePriceCart(item);\n        this.updateItems(item);\n        const price = this.updatePriceOrder(item);\n        const discountMug = this.updateDiscountMug(item);\n        const discountShirt = this.updateDiscountShirt(item);\n        this.updateTotalCost(price, discountMug, discountShirt);\n    }\n\n    render() {\n        return (\n            <main className=\"App\">\n                <ProductsList products={this.state.products}\n                    addProduct={this.addProduct}\n                    substractProduct={this.substractProduct}\n                />\n                <Summary items={this.state.items}\n                    price={this.state.price}\n                    discountMug={this.state.discountMug}\n                    discountShirt={this.state.discountShirt}\n                    totalCost={this.state.totalCost}\n                />\n            </main>\n        );\n    }\n}\nexport default MainPage;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport close from \"../images/close.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProductDetail(props) {\n\n    //Destructuring props\n    const { productName, productCode, productPrice, imageDetailSrc, imageAlt } = props.product;\n\n    function handleClick(ev) {\n        ev.preventDefault();\n        props.handleClick(productCode);\n    }\n\n    return (\n        <main className=\"App\">\n            <section className=\"productDetail\">\n                <div className=\"countainer-image\">\n                    <img className=\"image\" src={`${imageDetailSrc}`} alt={imageAlt} />\n                </div>\n            </section>\n            <aside className=\"summary detail\">\n                <Link to={'/'} replace>\n                    <img className=\"close-tag\" src={close} alt=\"grey cross\" />\n                </Link>\n                <h1 className=\"text-end\">{productName} <span>{productPrice}€</span></h1>\n                <div className=\"summary-discounts wrapper-half border\">\n                    <ul>\n                        <li><span className=\"text-detail\">Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. In sodales semper elit sit amet\n                        interdum. Praesent volutpat sed elit vel\n                        consectetur. Nulla tempus tincidunt ex, sit\n                        amet semper ipsum imperdiet varius. In\n                        rutrum aliquam nisl, sagittis faucibus felis\n                        bibendum id.</span></li>\n                    </ul>\n                </div>\n                <p className=\"product-code\">Product code  {productCode}</p>\n                <div className=\"summary-total wrapper no-top\">\n\n                    <button type=\"submit\" onClick={handleClick}>Add to cart</button>\n                </div>\n            </aside>\n\n        </main >\n    )\n}\n\nProductDetail.propTypes = {\n    productName: PropTypes.string,\n    productCode: PropTypes.string,\n    productPrice: PropTypes.number,\n    imageDetailSrc: PropTypes.string,\n    imageAlt: PropTypes.string,\n    handleClick: PropTypes.func\n};\n\n\nexport default ProductDetail;","import React from \"react\";\nimport MainPage from \"./MainPage\";\nimport ProductDetail from \"./ProductDetail\";\nimport { Route, Switch } from \"react-router-dom\";\nimport apiData from \"../api/dataProducts.json\";\nimport \"../stylesheets/App.css\";\nimport close from \"../images/close.png\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: apiData\n    }\n    this.renderProductDetail = this.renderProductDetail.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(code) {\n    const selectProduct = this.state.products.find(product => product.productCode === code);\n    this.setState({ productValue: selectProduct.productValue++ });\n    alert('You added a product!')\n  }\n\n  renderProductDetail(props) {\n    const routeId = props.match.params.product;\n    const selectedProduct = this.state.products.find(product => product.productCode === routeId);\n    if (selectedProduct.productCode === 'X7R2OPX') {\n      return (\n        < ProductDetail product={selectedProduct} handleClick={this.handleClick} />\n      );\n    } else {\n      return (\n        <main className=\"App\">\n          <h1 className=\"not-found\">\n            Ups...This product doesn't exist\n          </h1>\n          <Link to={'/'} replace>\n            <img className=\"close-tag\" src={close} alt=\"grey cross\" />\n          </Link>\n        </main>);\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route exact path=\"/\" >\n            <MainPage apiData={this.state.products} />\n          </Route>\n          <Route path=\"/:product\" render={this.renderProductDetail} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(<HashRouter>\n    <App />\n</HashRouter>, document.getElementById(\"root\"));\n"],"sourceRoot":""}